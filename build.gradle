plugins {
    id 'java'
    id 'io.qameta.allure' version '2.11.2'
}

group = 'ru.sportmarafon'
version = '1.0-SNAPSHOT'

def slf4jVersion = "2.0.7",
    junitVersion = "5.10.0",
    selenideVersion = "6.18.0",
    allureVersion = "2.24.0",
    fakerVersion = "1.0.2"

allure {
    report {
        version.set(allureVersion)
    }
    adapter {
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set(allureVersion)
            }
        }
    }
}

repositories {
    mavenCentral()
}

compileJava {
    options.encoding = 'UTF-8'
}
compileTestJava {
    options.encoding = 'UTF-8'
}

dependencies {
    testImplementation(
            "org.junit.jupiter:junit-jupiter:$junitVersion",
            "com.codeborne:selenide:$selenideVersion",
            "io.qameta.allure:allure-selenide:$allureVersion",
            "com.github.javafaker:javafaker:$fakerVersion"
    )

    testRuntimeOnly(
            "org.slf4j:slf4j-simple:$slf4jVersion"
    )
}

tasks.withType(Test).configureEach {
    useJUnitPlatform()
    systemProperties(System.getProperties())

    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}

tasks.register('web_test', Test) {
    useJUnitPlatform {
        includeTags("WEB")
    }
}

tasks.register('smoke_test', Test) {
    useJUnitPlatform {
        includeTags("SMOKE")
    }
}

tasks.register('regression_test', Test) {
    useJUnitPlatform {
        includeTags("REGRESSION")
    }
}

tasks.register('positive_test', Test) {
    useJUnitPlatform {
        includeTags("POSITIVE")
    }
}

tasks.register('negative_test', Test) {
    useJUnitPlatform {
        includeTags("NEGATIVE")
    }
}